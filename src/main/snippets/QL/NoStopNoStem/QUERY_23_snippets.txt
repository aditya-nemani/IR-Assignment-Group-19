QL_NoStopNoStem

Query
digitized computing structures and algorithms

Top 100 Results (148 millisecs)


DocID: CACM-2125

digitized image, connection tree, minimal polygon,  
and the corresponding [computing] times are listed.  
contour from a [digitized] image is illustrated.  


DocID: CACM-2081

complete calculus, data [structures] linear  
ended to sequence operators and cumulative operators.  algorithms  
and utilized for efficient [computing] by saving memory space and  


DocID: CACM-2754

peak detection, [digitized] waveform, piecewise linear  
peaks in a [digitized] waveform are detected by an  


DocID: CACM-3025

contributions to [computing] technology include:  
sharing [computing] systems; transferring hardware  
computer [structures] architecture, operating system, timesharing  


DocID: CACM-2630

two [algorithms] are presented that construct  
on [computing] sets of shortest paths in a graph  
in a directed graph.  these [algorithms] generalize the floyd  


DocID: CACM-2433

structures, illiac iv fortran  
control [structures] in illiac iv fortran  
structures suitable for exploiting illiac iv parallelism.  


DocID: CACM-2832

on previous context tree retrieval [algorithms]  
the search rapid.  [algorithms] for addition and  
context trees, frame problem, variable bindings, data structures  


DocID: CACM-1411

comparison of several [algorithms] for computation  
several [algorithms] for computation of basic  
included the usual [computing] formulas, correction  


DocID: CACM-1873

accelerating lp algorithms  
it is shown how a novel method for computing  
phase of lp [algorithms]  other lp applications are indicated.  


DocID: CACM-2834

gray code, combinations, subsets, compositions, combinatorial computing  
algorithms are presented to generate the n-bit  
fixed weight in that code.  both [algorithms] are efficient  


DocID: CACM-3124

construction of data-driven [algorithms]  
recursive data [structures] in apl  
trees, data-driven [algorithms] theory of arrays  


DocID: CACM-2454

computational [algorithms] for closed queueing  
the computational [algorithms] are based on two-dimensional  
methods are presented for [computing] the equilibrium  


DocID: CACM-2169

run time data [structures] and implementation  
quickly and easily on a variety of computing  


DocID: CACM-3166

computing standard deviations: accuracy  
four [algorithms] for the numerical computation  
and computational literature; the other two are new algorithms  


DocID: CACM-2130

automatic segmentation of cyclic program structures  
automatic segmentation, cyclic program [structures] loops, paging,  
imposed by the available [computing] equipment.  a generalization of  


DocID: CACM-2766

list [structures] is given.  this algorithm  
the best previous bounded workspace copying algorithms  
copying cyclic list [structures] in linear time using bounded workspace  


DocID: CACM-2999

for data [structures] [computing] techniques, time series, cross tabulation  


DocID: CACM-2019

digitized hand printed numerals obtained from sales clerks. the  


DocID: CACM-0371

remarks on [algorithms] 2 and 3, algorithm 15 and [algorithms] 25 and 26  


DocID: CACM-2060

not permitted.  the functional approach to data [structures] and the  
algorithm for [computing] or accessing its components.  the existence of  
structures are treated as functions.   4  type declarations are  


DocID: CACM-2092

structures and the [algorithms] used for question answering.  
time-sharing system.  the system's data [structures] and their semantic  


DocID: CACM-3037

primes, [algorithms] data structures  


DocID: CACM-2114

derived.  two [algorithms] which retrieve records from the generalized file  
and from which some of the frequently used file [structures] such  


DocID: CACM-3086

analysis of [algorithms] combinatorial problems,  
the decision tree complexity of [computing] the  
on the complexity of [computing] the measure of u[ai, bi]  


DocID: CACM-2756

and [computing] medicine and health care  


DocID: CACM-2855

arbitrary list [structures] using no storage  
algorithms for the same problem.  some variations  


DocID: CACM-2883

can be solved using well-known graph search [algorithms]  
method can lead to substantial improvements in computing  
are used, the [computing] time will depend on the amount  


DocID: CACM-2484

information [structures] as list, tree, ring,  
different relations and [algorithms] results in different  
and formulating [algorithms] under a given set of constraints.  


DocID: CACM-2314

structures, data [structures] programming primitives,  
facilities, programmable control [structures] and sophisticated  
features, since [algorithms] must be not only  


DocID: CACM-1810

hierarchies, replacement [algorithms] performance, measurement  
the important troubles which beset [computing] today  
will probably become a normal part of most [computing] systems.  


DocID: CACM-1946

algorithms for [computing] the resultant of two  
computing polynomial resultants: bezout's determinant  
and [computing] speed.  preliminary considerations narrow  


DocID: CACM-3032

routing procedures and data [structures] already  
nodes of a network.  [algorithms] for accomplishing  
this list of [algorithms] we add  6  reverse path  


DocID: CACM-1862

of [computing] centers, university [computing] capabilities, university-student  
programs, university [computing] centers, surveys  
university education, [computing] science academic  


DocID: CACM-2838

algorithms for recovering discarded list [structures] in  
parallel processing, real time, data [structures] analysis of algorithms  


DocID: CACM-2723

data [structures] gc processor  
algorithms for a multiprocessing compactifying  


DocID: CACM-0657

information [structures] for processing and retrieving  


DocID: CACM-1224

determining a [computing] center environment  
of a [computing] center environment are obtained.  the  


DocID: CACM-2709

structured programming, control [structures]  
a genealogy of control structures  
results on control [structures] and explores  


DocID: CACM-1275

code [structures] for protection and manipulation  


DocID: CACM-2828

visible surface [algorithms] hidden surface [algorithms]  
hierarchical data [structures] geometric  
hierarchical geometric models for visible surface algorithms  


DocID: CACM-2833

reclaiming non-self-referential [structures] and a linearizing,  
algorithms are designed to work well in systems  


DocID: CACM-1431

a structure from the structure's definition.  
some basic facts about certain data structures  
on a storage mapping function for data structures  


DocID: CACM-1423

algorithms are fairly complicated and require  
a simple algorithm for [computing] the generalized inverse of a matrix  


DocID: CACM-3164

list processing, data [structures] topological sort,  
of actions. two pad [algorithms] are presented; one uses a simple  


DocID: CACM-2402

digital computers encourages the development of algorithms  
pattern recognition [algorithms] is hindered by the fact  
for large [structures]  this is significant, for crystallography  


DocID: CACM-2032

data [structures] tree [structures] file [structures] scatter  
file [structures] using hashing functions  


DocID: CACM-2325

of computation, [algorithms] continuous algorithms  
complexity , synthesis and analysis of [algorithms]  
of continuous [algorithms]  four of the components  


DocID: CACM-2963

longest common subsequence, efficient algorithms  
previously published [algorithms] for finding  
a fast algorithm for [computing] longest common subsequences  


DocID: CACM-2524

corresponding search [algorithms] which are intended  
three file [structures] are presented together with their  


DocID: CACM-2197

remote [computing] shared computing  
network [computing] regional [computing] networks,  
curriculum development, educational [computing]  


DocID: CACM-1745

and free enterprise, [computing] economics,  
information networks, information systems, computing  
a position paper on [computing] and communications  


DocID: CACM-2357

time-sharing, remote [computing] on-line access,  
on-line [computing] remote file manager, real time,  
mux, a simple approach to on-line computing  


DocID: CACM-2665

copying list [structures] using bounded workspace  
cyclic [structures] are copied in average time  
two new [algorithms] are presented for list structure  


DocID: CACM-2417

four combinatorial [algorithms] [g6]  algorithm a466   


DocID: CACM-3011

of [computing] and tends to control [computing] decisions  
computing, involving the use of relatively unsophisticated  
computers, county government computers, computer impacts, management computing  


DocID: CACM-3090

of [computing] management information systems,  
sociology of [computing] information systems and  
social impacts of [computing] organizational impacts  


DocID: CACM-3148

distributed [computing] modules, messages, assertions  
high level programming for distributed computing  
to distributed [computing] at the level of general purpose programming  


DocID: CACM-2810

professionalism in the [computing] field  
improvements to help the [computing] practitioner  
definition specified, the [computing] practitioner is,  


DocID: CACM-2615

procedures for [computing] smoothing and interpolating  


DocID: CACM-2594

structured data structures  
complicated [structures] without sufficient protection.  
structured programming, data [structures] data base management system  


DocID: CACM-1525

for [computing] complex fourier transform and  
on [computing] the fast fourier transform  
for accurately [computing] the needed trigonometric  


DocID: CACM-1158

program [structures] for parallel processing  


DocID: CACM-3156

graph theory, parallel processing, [algorithms]  
computing connected components on parallel computers  


DocID: CACM-2155

data [structures] graph, implementation,  
toward an understanding of data structures  
for describing the semantics of data [structures]  


DocID: CACM-3165

polygon maps, cellularization, gridding, geographic data [structures]  
the new organization is further illustrated by the outline of algorithms  


DocID: CACM-2954

copying, shared subtrees, cyclic structures  
list [structures] using bounded workspace and  
a bounded storage algorithm for copying cyclic structures  


DocID: CACM-1889

regional center, consortium, remote computing  
introducing [computing] to smaller colleges  
regional network, introducing [computing] under-graduate  


DocID: CACM-3158

secure personal [computing] in an insecure network  
personal [computing] security, privacy, networks, public-key encryption  
a method for implementing secure personal [computing] in a network  


DocID: CACM-2272

a family of sorting [algorithms] is proposed,  
algorithms, sorting by replacement selection, expected string length  


DocID: CACM-1050

a parts breakdown technique using list structures  


DocID: CACM-3035

university [computing] computer planning  
enhanced the delivery of [computing] services.  
a strategic planning methodology for the computing  


DocID: CACM-2505

and adjacent transposition algorithms  


DocID: CACM-3058

search strategies, database [structures] index  
when sequential file [structures] must be used  


DocID: CACM-3006

fault frequency, paging algorithms  
algorithms, virtual memory, working set, page  
anomalies with variable partition paging algorithms  


DocID: CACM-1010

present-day [computing] facilities are limited  
research [computing] instrument should be available  


DocID: CACM-1658

programming, zero-one variables, algorithms  
of several existing [algorithms] for the  
analysis of [algorithms] for the zero-one programming problem  


DocID: CACM-2406

computer language for specifying data [structures]  
of logical data [structures] with little  
concern for how these [structures] are physically realized  


DocID: CACM-2236

p.  [algorithms] r352, r385, r392   


DocID: CACM-2452

file organization, file [structures] file management,  
structures and to facilitate as much as possible the process  


DocID: CACM-2198

data [structures] storage [structures] information  
with respect to data [structures] host language  
structures is mentioned, followed by a discussion of the  


DocID: CACM-2822

the association for [computing] machinery.  
copyright 1976, association for computing  


DocID: CACM-0409

data and [algorithms] may be expressed in a family  
as well as [algorithms] defined on these data sets.  both  


DocID: CACM-2780

a recursive algorithm for [computing] the inverse  
on [computing] certain elements of the inverse of a sparse matrix  


DocID: CACM-2283

thinning [algorithms] rectangular, hexagonal,  
and the relative performances of the algorithms  
in this report three thinning [algorithms] are  


DocID: CACM-1417

unquestionably present in [computing] equipment.  


DocID: CACM-2741

critical [computing] loads which bring the system  
behavior and evaluate the performance of computing  


DocID: CACM-2950

scheduling [algorithms] scheduling models, priority,  
of time-invariant [algorithms] which include most  
algorithms, the dependence of processing rates  


DocID: CACM-2490

graphs,analysis of [algorithms] graph manipulation  
efficient [algorithms] are presented for partitioning  
efficient [algorithms] for graph manipulation [h]  algorithm a447   


DocID: CACM-1604

further analysis of a [computing] center environment  
times of over 10,000 jobs serviced in a university computing  


DocID: CACM-2884

permutations, loop-free algorithms  
classical permutation enumeration [algorithms] encounter  
permutation enumeration: four new permutation algorithms  


DocID: CACM-2975

data [structures] directed graphs, uniform insertion  
remark on uniform insertion in structured data structures  


DocID: CACM-0111

numerical techniques are presented for computing  


DocID: CACM-1548

data [structures] job identity, hardware and job priorities,  


DocID: CACM-1457

data [structures] including linear text, sparse matrices,  
and tree or list [structures]  the main data  


DocID: CACM-1392

of mathematical expression manipulation algorithms  
formac expand and differentiation [algorithms] a  
in the design of [algorithms] for manipulating  


DocID: CACM-2941

data [structures] systems programming  


DocID: CACM-1438

a method for [computing] the index, or winding  


DocID: CACM-2387

maximum [computing] power and cost factors in the centralization problem  


DocID: CACM-0759

procedures and also of [computing] procedures  


DocID: CACM-0627

knotted list structures  

