BM25_NoStopNoStem

Query
optimization of intermediate and manage code

Top 100 Results (187 millisecs)


DocID: CACM-2495

object[code] [optimization] register assignment,  
arithmetic expressions, [code] generation, compilers,  
adapting optimal [code] generation for arithmetic  


DocID: CACM-1795

code [optimization] sequencing of operations,  
optimal [code] for serial and parallel computation  


DocID: CACM-1223

high speed compilation of efficient object code  
optimization such as the effective use of index  
scan an [intermediate] language produced by the preceding  


DocID: CACM-2897

optimization, [optimization] techniques, data flow analysis  
compiler structure, optimizing compiler, code  
can further improve the object [code]  


DocID: CACM-1947

object [code] optimization  
instructions, object [code] [optimization] redundancy  


DocID: CACM-3080

the system is as a post [optimization] step in code  
compilers, correctness, [code] [optimization]  
proving the correctness of heuristically optimized code  


DocID: CACM-3054

various [code] [optimization] techniques.  a detailed  
quicksort, analysis of algorithms, [code] [optimization] sorting  


DocID: CACM-2904

compilers, [optimization] of compiled [code] program analysis,  
integrated package of local [optimization] algorithms.  


DocID: CACM-2253

languages, program [optimization] range operations, symbolic  
generate [code] for handling the tedious address  
in a previous paper.  this scheme attempts program optimization  


DocID: CACM-2464

optimization, constrained [optimization] box's algorithm  
the complex method for constrained [optimization] [e4]  algorithm a454   


DocID: CACM-1658

operations research, [optimization] theory, integer  
over several test problems of small and intermediate  


DocID: CACM-2929

program [optimization] compilers, structured  
is analyzed.  the [optimization] consists  
an [optimization] technique known as inline substitution  


DocID: CACM-1655

code extension, [code] table, bit pattern  
standard [code] [code] information interchange, characters,  
code extension procedures for information  


DocID: CACM-1564

tables into cobol [code] is contained in the  
a line at a time.  the only optimization  
indexing and also by outputting the [code] as it is generated,  


DocID: CACM-1756

code, hole-patterns, hole-patterns assignment,  
hollerith punched card [code]  proposed usa standard   
usa standard, card [code] punched card, punched card  


DocID: CACM-2748

threaded [code] snobol4, interpretors, [code] generation  
indirect threaded code  
an efficient arrangement for interpretive code  


DocID: CACM-2491

code  
threaded code  
tradeoff, compiled [code] subroutine calls, threaded  


DocID: CACM-2423

automata, translation grammars, translator [optimization] compression algorithm  
table entries and 82 words are links to code  
syntactic rule corresponds to a  possibly empty  "code  


DocID: CACM-2533

gray [code] sign sequences, ordering, positive  
gray [code] and the +- sign sequence when  


DocID: CACM-1992

hashing, hash [code] scatter storage, calculated address,  
comment on bell's quadratic quotient method for hash [code] searching  


DocID: CACM-2611

the complex method for constrained [optimization]  algorithm r454   


DocID: CACM-1231

peephole optimization  
optimizing technique called peephole [optimization]  


DocID: CACM-1886

factorization algorithms, [code] [optimization] sequencing  
generation of optimal [code] for expressions via factorization  
efficiency of the object [code] produced by first factoring  


DocID: CACM-1807

fortran, [optimization] expressions, compilers,  
optimization of expressions in fortran  
code without significantly reducing the compilation  


DocID: CACM-0048

code  with 64 10-bit [code] words to be employed  
shift-register [code] for indexing applications  
a single-error correcting [code]  "minimum-distance-three"  


DocID: CACM-1362

7-bit [code] for information interchange.  
philosophies regarding [code] extension applications,  
the american standard [code] for information  


DocID: CACM-0797

american standard [code] for information interchange  


DocID: CACM-2835

recursion, compiler optimization  
recursion analysis for compiler optimization  
use in compiler [optimization]  implementation considerations  


DocID: CACM-1757

data [code] for calendar date for machine-to-machine  
usa standard, data [code] calendar date, machine-to-machine  


DocID: CACM-0195

what is a [code]  


DocID: CACM-1289

proposed revised american standard [code] for information interchange  


DocID: CACM-2701

global flow analysis, data flow, [code] [optimization]  
the time bound.  examples are given of code  


DocID: CACM-1414

twelve-row punched-card [code] for information  


DocID: CACM-1064

perforated tape [code] for information  


DocID: CACM-0230

a proposal for character [code] compatibility  


DocID: CACM-2133

operations research, [optimization] theory,  


DocID: CACM-1187

note on an ascii-octal [code] table  standards   


DocID: CACM-3140

al verification process difficult to justify and [manage]  it is felt  


DocID: CACM-2107

code eliminating secondary clustering  
hashing, hash [code] scatter storage, calculated address, clustering,  
secondary clustering as a cause of hash [code] inefficiency is discussed, and a  


DocID: CACM-2944

optimization, reference counts, storage  
used to find actions that cancel when the [code] is executed  


DocID: CACM-0066

a proposal for a generalized card [code] for 256 characters  


DocID: CACM-1134

prompted the development of an [intermediate] language  
efficiency.  the subject of this paper is the intermediate  


DocID: CACM-1652

code , is an 8-bit [code] set constructed  
a [code] for non-numeric information processing  
a [code] has been specifically designed to simplify  


DocID: CACM-2290

connectivity, program [optimization] optimizing compiler  


DocID: CACM-2586

adapting optimal [code] generation for arithmetic  


DocID: CACM-1204

standard [code] for information interchange  proposed american standard   


DocID: CACM-1402

of obtaining functional values at points intermediate  


DocID: CACM-2858

program structure and a choice of optimization  
in which case the total [code] length is minimized, or  


DocID: CACM-2834

reflected gray [code] and its applications  
gray [code] combinations, subsets, compositions, combinatorial computing  
binary reflected gray [code] and codewords of  


DocID: CACM-2552

hash [code] open hash, chaining, information retrieval, collision  


DocID: CACM-1676

common subsegments, tree representation, optimization  
and do-loop and machine-dependent [optimization] in  
machine-independent [optimization] occurs in pass ii  


DocID: CACM-0252

intermediate and final results.  


DocID: CACM-1670

code, hole-patterns, hole-patterns assignment,  
usa standard, card [code] punched card, punched card  


DocID: CACM-2616

decision tables, program [optimization] debugging,  
conversions are mainly program debugging and optimization  


DocID: CACM-3115

intermediate vectors to the matrices.  the mapping  
to two [intermediate] vectors.  these vectors are mapped into  


DocID: CACM-0093

three address computer [code]  


DocID: CACM-3066

testing, [code] walkthroughs, [code] inspections,  
and [code] walkthroughs/inspections  
popular [code] walk through/inspection method was as effective  


DocID: CACM-2964

optimization, resident, overflow storage  


DocID: CACM-2433

code structuring is the crucial illiac optimization  


DocID: CACM-1973

the linear quotient hash code  
hashing, hash [code] scatter storage, calculated  


DocID: CACM-2836

optimization.  
structural ambiguity, combinatorial optimization  


DocID: CACM-2850

to [manage] and to prove things about symbolic  


DocID: CACM-1783

many significant digits are needed in the intermediate  


DocID: CACM-1232

code in punched cards  ecma standard   


DocID: CACM-1275

code structures for protection and manipulation  


DocID: CACM-1786

an improved hash [code] for scatter storage  
hash [code] hash table, scatter storage, searching  


DocID: CACM-2344

time-sharing, simulation studies, [optimization]  
features would benefit from [optimization] whereas  
algorithm, including the scheduling itself, require [optimization]  


DocID: CACM-1065

bit sequencing of the american standard [code] for  


DocID: CACM-0333

design of an improved* transmission/data processing code  


DocID: CACM-1523

majority of the [code] being written in fortran.  
no attempt was made to use reentrant [code]  


DocID: CACM-1066

a computer [code]  an advanced [code] must cope with  
the simplex algorithm, an efficient and reliable code  
for organizing a computer [code] has undergone a radical  


DocID: CACM-2411

inductive assertion, least fix points, optimization  


DocID: CACM-2537

minimum space, text storage, [optimization]  
optimization problem: determine how each message should  


DocID: CACM-1062

for [intermediate] manipulations, which are performed  


DocID: CACM-1392

intermediate expression swell in order to minimize  


DocID: CACM-2680

disk analysis, disk [optimization] disk files,file  
turnaround time.  an [optimization] model for  


DocID: CACM-2888

data, file, reference [code] systems  
be reflected in the reference [code] framework is shown  


DocID: CACM-3173

configurations of prestatements corresponding to several lines of [code]  
to a line of [code]  3  chunks are frequently occurring  


DocID: CACM-1651

in this descriptive article an input code  
the input [code] described.  from a user's standpoint,  
in the [code] itself, but from an efficiency evaluation:  


DocID: CACM-3175

every [code] letter is assigned probabilities of representing plain text  
code letters, using joint letter probabilities.  iterating the updating  


DocID: CACM-1387

growth in the [intermediate] equations and the hazards  


DocID: CACM-1331

these symbols are indicated.  a 6-bit [code] assignment  
code structures for protection and manipulation of variable-length items  


DocID: CACM-0124

solution is presented in algol [code]  an empirical relation  


DocID: CACM-2716

relational database, database [optimization] inverted  
global query [optimization]  2  exploiting disjoint  


DocID: CACM-1345

in tensor calculus.  using this [code] christoffel symbols  


DocID: CACM-3130

elementary level topics and courses, and [intermediate] level courses.  


DocID: CACM-2801

bcd [code] by simple removal of redundant  
of the cases the compressed [code] results from the conventional  


DocID: CACM-0693

concepts has been developed to solve optimization  


DocID: CACM-3125

optimizer, [optimization] compiler, compilation,  
global [optimization] by suppression of partial redundancies  


DocID: CACM-3110

code generation, assemblers, compilers,  
assembling [code] for machines with span-dependent instructions  


DocID: CACM-3018

algorithm which solves a certain combinatorial optimization  
this [optimization] problem is here shown to be equivalent  


DocID: CACM-2579

optimization, redundant computations, common subexpressions,  


DocID: CACM-2871

programs are incomplete in that intermediate  


DocID: CACM-1922

procedures for the usa standarad [code] for information  


DocID: CACM-1029

function, by introduction of [intermediate] variables,  


DocID: CACM-1154

unrestricted turing machines.  [intermediate] machines  


DocID: CACM-1551

algorithms generate an object [code] which minimizes  


DocID: CACM-3171

line number administration, diagnostic messages, abstract machine code  


DocID: CACM-2195

programming, interaction graph, secondary [optimization] problem  
the complexity of the [optimization] process is then discussed.  


DocID: CACM-3005

only fixed length  1-byte  op [code] and address  
size by a factor of 3.  unlike a huffman [code]  

